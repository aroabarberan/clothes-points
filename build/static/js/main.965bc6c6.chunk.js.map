{"version":3,"sources":["Components/TableContent.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","root","overflowX","marginTop","margin","table","minWidth","spacing","createCloth","id","name","picture","points","limit","total","rows","TableContent","classes","Paper","className","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","style","height","width","src","alt","aling","textAlign","Fab","size","color","colSpan","rowSpan","bar","padding","backgroundColor","App","AppBar","position","Toolbar","variant","Typography","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.965bc6c6.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Table, Fab, TableHead, TableBody, TableCell,\n  TableRow, Paper, makeStyles, Button\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nimport * as firebase from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDRNwCTxL4SY0SURTapYQNP49ajIHNOL5g\",\n  authDomain: \"clothes-point.firebaseapp.com\",\n  databaseURL: \"https://clothes-point.firebaseio.com\",\n  projectId: \"clothes-point\",\n  storageBucket: \"clothes-point.appspot.com\",\n  messagingSenderId: \"560717171334\",\n  appId: \"1:560717171334:web:697efbdd441932980cdf07\",\n  measurementId: \"G-M0030HXHXD\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst useStyles = makeStyles( theme => ({\n  root: {\n    overflowX: 'auto',\n    marginTop: 100,\n    margin: 40,\n  },\n  table: {\n    minWidth: 100,\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction createCloth(id, name, picture, points, limit, total) {\n  return { id, name, picture, points, limit, total }\n}\n\nconst rows = [\n  createCloth(1, 'T-shirt', 'https://res.cloudinary.com/teepublic/image/private/s--v-bCp-iP--/t_Resized%20Artwork/c_crop,x_10,y_10/c_fit,w_442/c_crop,g_north_west,h_626,w_470,x_-14,y_0/g_north_west,u_upload:v1462829021:production:blanks:ypmyd1fntg5klzifbc7n,x_-409,y_-325/b_rgb:eeeeee/c_limit,f_jpg,h_630,q_90,w_630/v1489539746/production/designs/1323738_1.jpg', 1, 100, 5),\n  createCloth(2, 'Skirt', 'https://res.cloudinary.com/teepublic/image/private/s--v-bCp-iP--/t_Resized%20Artwork/c_crop,x_10,y_10/c_fit,w_442/c_crop,g_north_west,h_626,w_470,x_-14,y_0/g_north_west,u_upload:v1462829021:production:blanks:ypmyd1fntg5klzifbc7n,x_-409,y_-325/b_rgb:eeeeee/c_limit,f_jpg,h_630,q_90,w_630/v1489539746/production/designs/1323738_1.jpg', 1, 100, 0),\n  createCloth(3, 'T-shirt', 'https://res.cloudinary.com/teepublic/image/private/s--v-bCp-iP--/t_Resized%20Artwork/c_crop,x_10,y_10/c_fit,w_442/c_crop,g_north_west,h_626,w_470,x_-14,y_0/g_north_west,u_upload:v1462829021:production:blanks:ypmyd1fntg5klzifbc7n,x_-409,y_-325/b_rgb:eeeeee/c_limit,f_jpg,h_630,q_90,w_630/v1489539746/production/designs/1323738_1.jpg', 1, 100, 10),\n  createCloth(4, 'T-shirt', 'https://res.cloudinary.com/teepublic/image/private/s--v-bCp-iP--/t_Resized%20Artwork/c_crop,x_10,y_10/c_fit,w_442/c_crop,g_north_west,h_626,w_470,x_-14,y_0/g_north_west,u_upload:v1462829021:production:blanks:ypmyd1fntg5klzifbc7n,x_-409,y_-325/b_rgb:eeeeee/c_limit,f_jpg,h_630,q_90,w_630/v1489539746/production/designs/1323738_1.jpg', 1, 100, 0),\n  createCloth(5, 'Belt', 'https://res.cloudinary.com/teepublic/image/private/s--v-bCp-iP--/t_Resized%20Artwork/c_crop,x_10,y_10/c_fit,w_442/c_crop,g_north_west,h_626,w_470,x_-14,y_0/g_north_west,u_upload:v1462829021:production:blanks:ypmyd1fntg5klzifbc7n,x_-409,y_-325/b_rgb:eeeeee/c_limit,f_jpg,h_630,q_90,w_630/v1489539746/production/designs/1323738_1.jpg', 1, 100, 0),\n\n\n];\n\nexport default function TableContent() {\n  const classes = useStyles();\n  // const [quantity, setQuantity] = React.useState('');\n\n  // const handleChange = event => {\n  //   console.log('modify ' + event.target.value)\n  //   setQuantity(Number(event.target.value) || '');\n  // };\n\n  // const sendQuantity = (id, quantity) => {\n  //   console.log('id ' + id + ' Send quantity ' + quantity);\n  // }\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell align=\"inherit\">Cloth</TableCell>\n            <TableCell align=\"inherit\">Trash</TableCell>\n            <TableCell align=\"center\">Quantity to remove</TableCell>\n            <TableCell align=\"left\">â‚¬</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>\n                <img\n                  style={{ height: 70, width: 70 }}\n                  src={row.picture}\n                  alt={row.name}\n                />\n              </TableCell>\n              <TableCell align=\"inherit\">{row.name}</TableCell>\n              <TableCell aling=\"inherit\">&nbsp;{row.total}</TableCell>\n\n              <TableCell style={{ textAlign: 'center', width: '50%' }}>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.margin}>\n                  <AddIcon />\n                </Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.margin}>\n                  <RemoveIcon />\n                </Fab>\n              </TableCell>\n              <TableCell aling=\"left\">{row.points}</TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell></TableCell>\n            <TableCell align=\"right\" colSpan={0}>My Wallet</TableCell>\n            <TableCell rowSpan={1} />\n            <TableCell align=\"left\">444</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}","import React from 'react';\nimport TableContent from './Components/TableContent';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst useStyles = makeStyles(theme => ({\n  bar: {\n    padding: 10,\n    backgroundColor: '#000',\n  }\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar position=\"fixed\" className={classes.bar}>\n        <Toolbar variant=\"dense\">\n          <Typography variant='h5' component='h2'>\n            For every 10 clothes less, a new one!!!&nbsp;\n          <Typography component='p' >\n            This can be a catastrophe and you know it \n          </Typography>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <TableContent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}