{"version":3,"sources":["Components/TableContent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","overflowX","marginTop","margin","display","flexWrap","table","minWidth","spacing","withoutLabel","textField","width","TableContent","classes","React","useState","dataBase","setDataBase","id","total","setTotal","value","setValue","useEffect","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","collection","get","then","clothes","c","forEach","cloth","push","data","Paper","className","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","key","style","height","src","image","alt","name","aling","points","textAlign","Fab","size","color","disabled","trash","onClick","item","rest","Math","round","doc","update","removeItem","sum","addItem","colSpan","rowSpan","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","onChange","event","target","startAdornment","InputAdornment","position","labelWidth","exchangeMoney","bar","padding","backgroundColor","App","AppBar","Toolbar","Typography","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bc17220.chunk.js","sourcesContent":["import 'firebase/firestore';\nimport React from 'react';\nimport {\n  Fab, Table, TableRow, Paper,\n  TableHead, TableBody, TableCell, makeStyles\n} from '@material-ui/core';\nimport * as firebase from \"firebase/app\";\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflowX: 'auto',\n    marginTop: 100,\n    margin: 40,\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  table: {\n    minWidth: 100,\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  marginTop: {\n    marginTop: 30,\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: 200,\n  },\n}));\n\n\nexport default function TableContent() {\n  const classes = useStyles();\n  const [dataBase, setDataBase] = React.useState([]);\n  const [total, setTotal] = React.useState({ id: null, total: 0 });\n  const [value, setValue] = React.useState('');\n\n  React.useEffect(() => {\n\n    const firebaseConfig = {\n      apiKey: \"AIzaSyDRNwCTxL4SY0SURTapYQNP49ajIHNOL5g\",\n      authDomain: \"clothes-point.firebaseapp.com\",\n      databaseURL: \"https://clothes-point.firebaseio.com\",\n      projectId: \"clothes-point\",\n      storageBucket: \"clothes-point.appspot.com\",\n      messagingSenderId: \"560717171334\",\n      appId: \"1:560717171334:web:697efbdd441932980cdf07\",\n      measurementId: \"G-M0030HXHXD\"\n    };\n\n    firebase.initializeApp(firebaseConfig);\n\n    const db = firebase.firestore();\n\n    db.collection('clothes').get()\n      .then(clothes => {\n        const c = [];\n        clothes.forEach(cloth => {\n          c.push({\n            id: cloth.id,\n            cloth: cloth.data()\n          })\n        })\n        setDataBase(c);\n      })\n\n    db.collection('total_points').get()\n      .then(db => {\n        db.forEach(data => {\n          setTotal({ id: data.id, total: data.data().total });\n        })\n      })\n  }, [])\n\n  const removeItem = (item) => {\n\n    const rest = Math.round((total.total - (1 * item.cloth.points) / 10) * 100) / 100;\n    firebase.firestore().collection('clothes').doc(item.id).update({\n      \"trash\": item.cloth.trash - 1,\n    })\n    firebase.firestore().collection('total_points').doc(total.id).update({\n      total: rest\n    })\n\n    setDataBase([...dataBase.map(data => data.id === item.id ?\n      {\n        ...data,\n        cloth: {\n          ...data.cloth,\n          trash: data.cloth.trash - 1,\n        }\n      } :\n      { ...data })\n    ])\n    setTotal({ id: total.id, total: rest });\n\n  }\n\n  const addItem = (item) => {\n    const sum = Math.round((total.total + (1 * item.cloth.points) / 10) * 100) / 100;\n    firebase.firestore().collection('clothes').doc(item.id).update({\n      \"trash\": item.cloth.trash + 1,\n    })\n    firebase.firestore().collection('total_points').doc(total.id).update({\n      total: sum\n    })\n    setDataBase([...dataBase.map(data => data.id === item.id ?\n      {\n        ...data,\n        cloth: {\n          ...data.cloth,\n          trash: data.cloth.trash + 1,\n        }\n      } :\n      { ...data })\n    ])\n    setTotal({ id: total.id, total: sum });\n  }\n\n  const handleChange = prop => event => {\n    setValue(event.target.value);\n  };\n\n  const exchangeMoney = value => {\n    let rest = total.total - value;\n    if (rest < 0 ) rest = 0;\n    \n    setTotal({ id: total.id, total: rest });\n    firebase.firestore().collection('total_points').doc(total.id).update({\n      total: rest\n    })\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell align=\"inherit\">Cloth</TableCell>\n            <TableCell align=\"inherit\"></TableCell>\n            <TableCell align=\"inherit\">Points</TableCell>\n            <TableCell align=\"center\">Remove / Add</TableCell>\n            <TableCell align=\"inherit\">Trash</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {dataBase.map(cloth => (\n            <TableRow key={cloth.id}>\n              <TableCell>\n                <img\n                  style={{ height: 70, width: 70 }}\n                  src={cloth.cloth.image}\n                  alt={cloth.cloth.name}\n                />\n              </TableCell>\n              <TableCell align=\"inherit\">{cloth.cloth.name}</TableCell>\n              <TableCell align=\"inherit\"></TableCell>\n              <TableCell aling=\"inherit\">&nbsp;{cloth.cloth.points}</TableCell>\n\n              <TableCell style={{ textAlign: 'center', width: '50%' }}>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"remove\" disabled={cloth.cloth.trash <= 0}\n                  className={classes.margin} onClick={() => { removeItem(cloth) }}>\n                  <RemoveIcon />\n                </Fab>\n                <Fab size=\"small\" color=\"primary\" aria-label=\"add\"\n                  className={classes.margin} onClick={() => { addItem(cloth) }}>\n                  <AddIcon />\n                </Fab>\n              </TableCell>\n              <TableCell aling=\"inherit\">&nbsp;{cloth.cloth.trash}</TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell></TableCell>\n            <TableCell></TableCell>\n            <TableCell align=\"right\" colSpan={0}>My Wallet</TableCell>\n            <TableCell rowSpan={2} />\n            <TableCell align=\"left\">{total.total}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      <FormControl fullWidth className={classes.marginTop} variant=\"outlined\">\n        <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-amount\"\n          value={value}\n          onChange={handleChange('amount')}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          labelWidth={60}\n        />\n        <Fab variant=\"extended\" color=\"primary\" aria-label=\"add\" className={classes.margin}\n          onClick={() => { exchangeMoney(value) }}>\n          Exchange money\n        </Fab>\n      </FormControl>\n    </Paper>\n  );\n}","import React from 'react';\nimport TableContent from './Components/TableContent';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  bar: {\n    padding: 10,\n    backgroundColor: '#000',\n  }\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar position=\"fixed\" className={classes.bar}>\n        <Toolbar variant=\"dense\">\n          <Typography variant='h5' component='h2'>\n            For every 10 clothes less, a new one!!!&nbsp;\n          <Typography component='p' >\n            This can be a catastrophe and you know it \n          </Typography>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <TableContent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}